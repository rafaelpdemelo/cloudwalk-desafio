upstream backend {
    server file-sharing-backend:3000;
    keepalive 32;
}

upstream frontend {
    server file-sharing-frontend:3001;
    keepalive 32;
}

server {
    listen 8080;
    server_name localhost;
    
    # Security measures
    client_max_body_size 50m;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Apply general rate limiting
    limit_req zone=general burst=50 nodelay;

    # Frontend routes
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # API routes with stricter rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Upload endpoints with special rate limiting
    location /api/upload {
        limit_req zone=upload burst=5 nodelay;
        
        # Increase timeout for file uploads
        client_body_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for uploads
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # CORREÇÃO SEGURANÇA: Bloquear arquivos sensíveis
    location ~ ^/(package\.json|node_modules|logs|uploads) {
        deny all;
        return 404;
    }

    # Bloquear diretórios administrativos
    location ~ ^/(admin|config|db|backup) {
        deny all;
        return 404;
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }

    # Block access to backup files
    location ~ ~$ {
        deny all;
        return 404;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location = /404.html {
        root /usr/share/nginx/html;
    }
}
